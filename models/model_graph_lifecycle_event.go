// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
)

// ModelGraphLifecycleEvent model graph lifecycle event
// swagger:model modelGraphLifecycleEvent
type ModelGraphLifecycleEvent struct {

	// flow id
	FlowID string `json:"flow_id,omitempty"`

	// graph completed
	GraphCompleted *ModelGraphCompletedEvent `json:"graph_completed,omitempty"`

	// graph created
	GraphCreated *ModelGraphCreatedEvent `json:"graph_created,omitempty"`

	// seq
	Seq uint64 `json:"seq,omitempty"`
}

// Validate validates this model graph lifecycle event
func (m *ModelGraphLifecycleEvent) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateGraphCompleted(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validateGraphCreated(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *ModelGraphLifecycleEvent) validateGraphCompleted(formats strfmt.Registry) error {

	if swag.IsZero(m.GraphCompleted) { // not required
		return nil
	}

	if m.GraphCompleted != nil {

		if err := m.GraphCompleted.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("graph_completed")
			}
			return err
		}
	}

	return nil
}

func (m *ModelGraphLifecycleEvent) validateGraphCreated(formats strfmt.Registry) error {

	if swag.IsZero(m.GraphCreated) { // not required
		return nil
	}

	if m.GraphCreated != nil {

		if err := m.GraphCreated.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("graph_created")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (m *ModelGraphLifecycleEvent) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *ModelGraphLifecycleEvent) UnmarshalBinary(b []byte) error {
	var res ModelGraphLifecycleEvent
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
