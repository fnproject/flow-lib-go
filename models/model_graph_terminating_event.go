// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
)

// ModelGraphTerminatingEvent Graph termination has started - no more changes can be made to this graph
// this will be fillowed by a completion event when any termination hooks have run
// swagger:model modelGraphTerminatingEvent
type ModelGraphTerminatingEvent struct {

	// flow id
	FlowID string `json:"flow_id,omitempty"`

	// function id
	FunctionID string `json:"function_id,omitempty"`

	// status
	Status ModelStatusDatumType `json:"status,omitempty"`

	// ts
	Ts strfmt.DateTime `json:"ts,omitempty"`
}

// Validate validates this model graph terminating event
func (m *ModelGraphTerminatingEvent) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateStatus(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *ModelGraphTerminatingEvent) validateStatus(formats strfmt.Registry) error {

	if swag.IsZero(m.Status) { // not required
		return nil
	}

	if err := m.Status.Validate(formats); err != nil {
		if ve, ok := err.(*errors.Validation); ok {
			return ve.ValidateName("status")
		}
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *ModelGraphTerminatingEvent) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *ModelGraphTerminatingEvent) UnmarshalBinary(b []byte) error {
	var res ModelGraphTerminatingEvent
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
