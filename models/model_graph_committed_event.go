// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
)

// ModelGraphCommittedEvent The graph is committed - this typically indicates that the function that created the flow has completed
// once this event has been posted the graph will finish when all active or pending nodes have completed.
// swagger:model modelGraphCommittedEvent
type ModelGraphCommittedEvent struct {

	// flow id
	FlowID string `json:"flow_id,omitempty"`

	// ts
	Ts strfmt.DateTime `json:"ts,omitempty"`
}

// Validate validates this model graph committed event
func (m *ModelGraphCommittedEvent) Validate(formats strfmt.Registry) error {
	var res []error

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// MarshalBinary interface implementation
func (m *ModelGraphCommittedEvent) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *ModelGraphCommittedEvent) UnmarshalBinary(b []byte) error {
	var res ModelGraphCommittedEvent
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
