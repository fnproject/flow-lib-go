// Code generated by go-swagger; DO NOT EDIT.

package flow_service

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"
	"time"

	"golang.org/x/net/context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/swag"

	strfmt "github.com/go-openapi/strfmt"
)

// NewAwaitStageResultParams creates a new AwaitStageResultParams object
// with the default values initialized.
func NewAwaitStageResultParams() *AwaitStageResultParams {
	var ()
	return &AwaitStageResultParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewAwaitStageResultParamsWithTimeout creates a new AwaitStageResultParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewAwaitStageResultParamsWithTimeout(timeout time.Duration) *AwaitStageResultParams {
	var ()
	return &AwaitStageResultParams{

		timeout: timeout,
	}
}

// NewAwaitStageResultParamsWithContext creates a new AwaitStageResultParams object
// with the default values initialized, and the ability to set a context for a request
func NewAwaitStageResultParamsWithContext(ctx context.Context) *AwaitStageResultParams {
	var ()
	return &AwaitStageResultParams{

		Context: ctx,
	}
}

// NewAwaitStageResultParamsWithHTTPClient creates a new AwaitStageResultParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewAwaitStageResultParamsWithHTTPClient(client *http.Client) *AwaitStageResultParams {
	var ()
	return &AwaitStageResultParams{
		HTTPClient: client,
	}
}

/*AwaitStageResultParams contains all the parameters to send to the API endpoint
for the await stage result operation typically these are written to a http.Request
*/
type AwaitStageResultParams struct {

	/*FlowID*/
	FlowID string
	/*StageID*/
	StageID string
	/*TimeoutMs*/
	TimeoutMs *int32

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the await stage result params
func (o *AwaitStageResultParams) WithTimeout(timeout time.Duration) *AwaitStageResultParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the await stage result params
func (o *AwaitStageResultParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the await stage result params
func (o *AwaitStageResultParams) WithContext(ctx context.Context) *AwaitStageResultParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the await stage result params
func (o *AwaitStageResultParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the await stage result params
func (o *AwaitStageResultParams) WithHTTPClient(client *http.Client) *AwaitStageResultParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the await stage result params
func (o *AwaitStageResultParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithFlowID adds the flowID to the await stage result params
func (o *AwaitStageResultParams) WithFlowID(flowID string) *AwaitStageResultParams {
	o.SetFlowID(flowID)
	return o
}

// SetFlowID adds the flowId to the await stage result params
func (o *AwaitStageResultParams) SetFlowID(flowID string) {
	o.FlowID = flowID
}

// WithStageID adds the stageID to the await stage result params
func (o *AwaitStageResultParams) WithStageID(stageID string) *AwaitStageResultParams {
	o.SetStageID(stageID)
	return o
}

// SetStageID adds the stageId to the await stage result params
func (o *AwaitStageResultParams) SetStageID(stageID string) {
	o.StageID = stageID
}

// WithTimeoutMs adds the timeoutMs to the await stage result params
func (o *AwaitStageResultParams) WithTimeoutMs(timeoutMs *int32) *AwaitStageResultParams {
	o.SetTimeoutMs(timeoutMs)
	return o
}

// SetTimeoutMs adds the timeoutMs to the await stage result params
func (o *AwaitStageResultParams) SetTimeoutMs(timeoutMs *int32) {
	o.TimeoutMs = timeoutMs
}

// WriteToRequest writes these params to a swagger request
func (o *AwaitStageResultParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param flow_id
	if err := r.SetPathParam("flow_id", o.FlowID); err != nil {
		return err
	}

	// path param stage_id
	if err := r.SetPathParam("stage_id", o.StageID); err != nil {
		return err
	}

	if o.TimeoutMs != nil {

		// query param timeout_ms
		var qrTimeoutMs int32
		if o.TimeoutMs != nil {
			qrTimeoutMs = *o.TimeoutMs
		}
		qTimeoutMs := swag.FormatInt32(qrTimeoutMs)
		if qTimeoutMs != "" {
			if err := r.SetQueryParam("timeout_ms", qTimeoutMs); err != nil {
				return err
			}
		}

	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
